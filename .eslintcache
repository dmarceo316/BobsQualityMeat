[{"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/index.js":"1","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/reportWebVitals.js":"2","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/App.js":"3","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Main.js":"4","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Home.js":"5","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Navigation.js":"6","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Menu.js":"7","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Contact.js":"8","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Footer.js":"9"},{"size":639,"mtime":1611093367551,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610928065197,"results":"12","hashOfConfig":"11"},{"size":264,"mtime":1611024586455,"results":"13","hashOfConfig":"11"},{"size":1115,"mtime":1612073654494,"results":"14","hashOfConfig":"11"},{"size":1214,"mtime":1612025783213,"results":"15","hashOfConfig":"11"},{"size":1913,"mtime":1612073654497,"results":"16","hashOfConfig":"11"},{"size":3378,"mtime":1611815764831,"results":"17","hashOfConfig":"11"},{"size":5601,"mtime":1612051685228,"results":"18","hashOfConfig":"11"},{"size":544,"mtime":1611981527145,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jvres1",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/index.js",[],["40","41"],"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/reportWebVitals.js",[],"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/App.js",[],"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Main.js",[],"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Home.js",[],"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Navigation.js",[],"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Menu.js",[],"/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Contact.js",["42","43","44"],"import React, { Component} from 'react';\nimport { Button, Label, Row, Col } from 'reactstrap';\nimport { Control, LocalForm, Errors} from 'react-redux-form';\n\n//Validators\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n    constructor(props){\n        super(props)\n            this.state={\n                name: '',\n                email: '',\n                message: '',\n                touched:{\n                    name: false\n                }\n            };\n    }\n\n    handleSubmit(values){\n        alert(JSON.stringify(values))\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"row\">\n                    <div className=\"col mb-5\">\n                        <h1 className=\"bobs-title\">Contact Us</h1>\n                        <h3>Stop by our butcher shop at 4861 Rainier Avenue South</h3>\n                        <h3>call us at 206-725-1221 to place an order</h3>\n                        <h3>Don't want to call? Send us an email!</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                    <div className=\"container\">\n                        <LocalForm model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                                    <Row className=\"form-group mb-4\"> \n                                        <Label htmlFor=\"name\" md={2}>Name</Label>\n                                        <Col md={10}>\n                                        <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                                placeholder=\"name\"\n                                                className=\"form-control\"\n                                                validators={{\n                                                    required, \n                                                    minLength: minLength(2),\n                                                    maxLength: maxLength(15)\n                                                }}\n                                            />\n                                            <Errors\n                                                className=\"text-danger\"\n                                                model=\".name\"\n                                                show=\"touched\"\n                                                component=\"div\"\n                                                messages={{\n                                                    required: 'Required',\n                                                    minLength: 'Must be at least 2 characters',\n                                                    maxLength: 'Must be 15 characters or less'\n                                                }}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group mb-4\">\n                                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                                        <Col md={10}>\n                                            <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                                placeholder=\"Email\"\n                                                className=\"form-control\"\n                                                validators={{\n                                                    required,\n                                                    validEmail\n                                                }}\n                                            />\n                                            <Errors\n                                                className=\"text-danger\"\n                                                model=\".email\"\n                                                show=\"touched\"\n                                                component=\"div\"\n                                                messages={{\n                                                    required: 'Required',\n                                                    validEmail: 'Invalid email address'\n                                                }}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group mb-4\">\n                                        <Label htmlFor=\"message\" md={2}>Comments</Label>\n                                        <Col md={10}>\n                                            <Control.textarea\n                                                className=\"form-control\"\n                                                model=\".message\"\n                                                id=\"message\"\n                                                name=\"message\"\n                                                rows=\"6\"\n                                            />\n                                        </Col>\n                                    </Row>\n                        <Button outline className=\"mb-4\" type=\"submit\" value=\"submit\" color=\"danger\">Submit</Button>\n                    </LocalForm>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact","/Users/dmarceo/Desktop/VS_code/React-Native-Projects/bobs-meat/src/components/Footer.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":47,"column":41,"nodeType":"51","endLine":55,"endColumn":47},{"ruleId":"49","severity":1,"message":"50","line":72,"column":45,"nodeType":"51","endLine":79,"endColumn":47},{"ruleId":"49","severity":1,"message":"52","line":95,"column":45,"nodeType":"51","endLine":101,"endColumn":47},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]